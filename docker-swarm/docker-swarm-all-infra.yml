version: '3.8'

networks:
  base-network:
    driver: overlay
    attachable: true

volumes:
  mysql-data:

services:
  mysql:
    image: rhsalska55/mysql
    build: ../support/dockerscript/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:       #- ../supportsub/mysqlmount:/var/lib/mysql #namedvolume으로 대체
      - mysql-data:/var/lib/mysql
    networks:
      - base-network
    ports:
      - 3306:3306

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    networks:
      - base-network
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    networks:
      - base-network
    ports:
      - 9092:9092

  rabbitmq:
    image: rabbitmq:management
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - base-network
    ports:
      - 5672:5672
      - 15672:15672

  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:latest
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - base-network
    ports:
      - 9411:9411
    environment:
      - STORAGE_TYPE=mem #영구 저장이 필요하면 db이용할것

  grafana:
    image: grafana/grafana
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - base-network
    ports:
      - 3000:3000

  prometheus:
    image: prom/prometheus
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - ../support/dockerscript/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - base-network
    ports:
      - 9090:9090

  config-service:
    image: rhsalska55/config-service
    build:
      context: ../config-service
      args:
        MAVEN_PROFILE: "alpha"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - base-network
    ports:
      - "8888:8888" #나중엔 꼭 닫아놓을것
    volumes:
      - ../configurations:/configurations
    environment:
      - SPRING_PROFILES_ACTIVE=alpha

